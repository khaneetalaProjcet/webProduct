import{J as i,j as o,Q as c,V as p}from"./index-BqZfhdqq.js";const r=i.create({baseURL:"https://gateway.khanetala.ir/v1/",headers:{"Content-Type":"application/json",Accept:"application/json","Content-Security-Policy":"default-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self'","X-Content-Type-Options":"nosniff","Referrer-Policy":"strict-origin-when-cross-origin"}});r.interceptors.request.use(e=>{const t=localStorage.getItem("token");return t?e.headers.Authorization=`Bearer ${t}`:o.replace("/login"),e},e=>Promise.reject(e));r.interceptors.response.use(e=>e,e=>(e.response.status==401&&(localStorage.removeItem("token"),o.replace("/login")),console.error("API Error:",e.response||e.message),Promise.reject(e)));const n=i.create({baseURL:"https://gateway.khanetala.ir/v1/trade",headers:{"Content-Type":"application/json",Accept:"application/json","Content-Security-Policy":"default-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self'","X-Content-Type-Options":"nosniff","Referrer-Policy":"strict-origin-when-cross-origin"}});n.interceptors.request.use(e=>{const t=localStorage.getItem("token");return t?e.headers.Authorization=`Bearer ${t}`:o.replace("/login"),e},e=>Promise.reject(e));n.interceptors.response.use(e=>e,e=>(e.response.status==401&&(localStorage.removeItem("token"),o.replace("/login")),console.error("API Error:",e.response||e.message),Promise.reject(e)));const y={async createInvoice(e){const t=JSON.stringify(e);return(await n.post("/createTransaction",t)).data},async complateTransaction(e){const t=JSON.stringify(e);return(await n.post("/completeBuy",t)).data},async GoldBoxBuyTransactions(e){const t=JSON.stringify(e);return(await c.post("/buytransactions",t)).data},async GoldBoxSellTransactions(e){const t=JSON.stringify(e);return(await p.post("/selltransactions",t)).data},async CreateCart(){return JSON.stringify(),(await c.post("/createCart")).data},async VerifyTransaction(e){const t=JSON.stringify(e);return(await n.post("/VerifyTransaction",t)).data},async createSellInvoice(e){const t=JSON.stringify(e);return(await n.post("/createTransaction",t)).data},async complateSellTransaction(e){const t=JSON.stringify(e);return(await n.post("/completeSell",t)).data},async DepositWallet(e,t){const s=JSON.stringify({amount:e,cartId:t});return(await n.post("/deposit",s)).data},async VerifyDepositWallet(e){const t=JSON.stringify(e);return(await n.post("/VerifyDeposit",t)).data},async WithdrawWallet(e,t){const s=JSON.stringify({amount:e,cartId:t});return(await n.post("/withdraw",s)).data},async WalletTransaction(e){const t=JSON.stringify(e);return(await c.post("/WalletTransactions",t)).data},async CreateTransfer(e){const t=JSON.stringify(e);return(await n.post("/transPort",t)).data},async TransferOtp(e){const t=JSON.stringify({transPortId:e});return(await n.post("/transPort/otp",t)).data},async VerifyTransferOtp(e,t){const s=JSON.stringify({otp:e,transPortId:t});return(await n.post("/transPort/verifyotp",s)).data},async GetBranches(){return(await r.get("/branch/all")).data},async GetSellers(e){return(await r.get(`/branch/seller/all/${e}`)).data},async CreateUseGold(e){const t=JSON.stringify(e);return(await r.post("/branch/transAction/create",t)).data},async UseGoldOtp(e){const t=JSON.stringify({transActionId:e});return(await r.post("/branch/transAction/otp",t)).data},async VerifyUseGold(e,t){const s=JSON.stringify({otp:e,transActionId:t});return(await r.post("branch/transAction/otp/verify",s)).data}};export{y as T};
