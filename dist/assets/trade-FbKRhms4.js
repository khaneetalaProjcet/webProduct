import{G as i,j as o,Q as r,V as c}from"./index-Dc3SZ32H.js";const n=i.create({baseURL:"https://gateway.khanetala.ir/v1/trade",headers:{"Content-Type":"application/json",Accept:"application/json","Content-Security-Policy":"default-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self'","X-Content-Type-Options":"nosniff","Referrer-Policy":"strict-origin-when-cross-origin"}});n.interceptors.request.use(s=>{const t=localStorage.getItem("token");return t?s.headers.Authorization=`Bearer ${t}`:o.replace("/login"),s},s=>Promise.reject(s));n.interceptors.response.use(s=>s,s=>(s.response.status==401&&(localStorage.removeItem("token"),o.replace("/login")),console.error("API Error:",s.response||s.message),Promise.reject(s)));const y={async createInvoice(s){const t=JSON.stringify(s);return(await n.post("/createTransaction",t)).data},async complateTransaction(s){const t=JSON.stringify(s);return(await n.post("/completeBuy",t)).data},async GoldBoxBuyTransactions(s){const t=JSON.stringify(s);return(await r.post("/buytransactions",t)).data},async GoldBoxSellTransactions(s){const t=JSON.stringify(s);return(await c.post("/selltransactions",t)).data},async CreateCart(){return JSON.stringify(),(await r.post("/createCart")).data},async VerifyTransaction(s){const t=JSON.stringify(s);return(await n.post("/VerifyTransaction",t)).data},async createSellInvoice(s){const t=JSON.stringify(s);return(await n.post("/createTransaction",t)).data},async complateSellTransaction(s){const t=JSON.stringify(s);return(await n.post("/completeSell",t)).data},async DepositWallet(s,t){const e=JSON.stringify({amount:s,cartId:t});return(await n.post("/deposit",e)).data},async VerifyDepositWallet(s){const t=JSON.stringify(s);return(await n.post("/VerifyDeposit",t)).data},async WithdrawWallet(s){const t=JSON.stringify({amount:s});return(await n.post("/withdraw",t)).data},async WalletTransaction(s){const t=JSON.stringify(s);return(await r.post("/WalletTransactions",t)).data},async CreateTransfer(s){const t=JSON.stringify(s);return(await n.post("/transPort",t)).data},async TransferOtp(s){const t=JSON.stringify({transPortId:s});return(await n.post("/transPort/otp",t)).data},async VerifyTransferOtp(s,t){const e=JSON.stringify({otp:s,transPortId:t});return(await n.post("/transPort/verifyotp",e)).data}};export{y as T};
